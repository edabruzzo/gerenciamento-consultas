info:
  app:
    name: ^project.name^
    version: ^project.version^
    build-date: ^build.datahora^

server:
  port: ${PORTA_API_BACKEND}
  servlet:
    context-path: /med-voll-api # Contexto padrao
  error:
    include-stacktrace: never
    whitelabel:
      enabled: false

spring:
  ##### activate dev profile
  #profiles:
    #active=dev
  mail:
    host: smtp.gmail.com
    port: 465
    protocol: smtps
    username: ${MAIL_USERNAME}@gmail.com
    password: ${MAIL_PASSWORD}
    allow-bean-definition-overriding: true
    properties:
      mail:
        transport:
          protocol: smtps
        smtps:
          auth: true
          starttls:
            enable: true
          timeout: 8000
  thymeleaf:
    cache: false
  application:
    name: med-voll-service
  config:
    import: "optional:file:./dev.properties"
  #################### DataSource Configuration ##########################
  datasource:
    ##### PostgreSQL
    url: jdbc:postgresql://${PSQL_SERVER}:${PSQL_SERVER_PORT}/${PSQL_DATABASE}
    username: ${PSQL_SERVICO_USERNAME:?error}
    password: ${PSQL_SERVICO_PASSWORD:?error}
    driver-class-name: org.postgresql.Driver
    validationQuery: select 1
    ####### H2
    ################### DataSource Configuration ##########################
    #url: jdbc:h2:mem:registration_02;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    #username: sa
    #password:

  jpa:
    show-sql: true
    ##### PostgreSQL
    #################### DataSource Configuration ##########################
    url: jdbc:postgresql://${PSQL_SERVER}:${PSQL_SERVER_PORT}/${PSQL_DATABASE}
    ####### H2
    ################### DataSource Configuration ##########################
    #url: jdbc:h2:mem:registration_02;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: false
    ##### PostgreSQL
    #################### DataSource Configuration ##########################
    url: jdbc:postgresql://${PSQL_SERVER}:${PSQL_SERVER_PORT}/${PSQL_DATABASE}
    user: ${PSQL_SERVICO_USERNAME:?error}
    password: ${PSQL_SERVICO_PASSWORD:?error}
    ####### H2
    ################### DataSource Configuration ##########################
    #url: jdbc:h2:mem:registration_02;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    #user: sa
    #password:
  data:
    rest:
      default-media-type: application/json
    web:
      sort:
        sort-parameter: ordenarPor
      pageable:
        default-page-size: 10
        max-page-size: 100
        page-parameter: pagina
        size-parameter: tamanho
  jackson:
    default-property-inclusion: NON_NULL

# Swagger
springdoc:
  swagger-ui:
    path: /docs/swagger-ui.html
    display-request-duration: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  api-docs:
    path: /docs

# M�tricas e monitoramento
management:
  endpoints:
    web:
      exposure:
        include: health, info

# Configuração de logging
logging:
  level:
    # Mais log: DEBUG
    com.zaxxer.hikari: ${LOG_LEVEL_HIKARI:DEBUG}
    # Mais log: DEBUG
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE:DEBUG}
    # Mais info: TRACE
    org.hibernate.type.descriptor.sql: ${LOG_LEVEL_HIBERNATE_DESCRIPTOR:TRACE}

purge:
  cron:
    expression: 0 0 5 * * ?

#Feature toggle for geo ip lib
geo:
  ip:
    lib:
      enabled: false

# recaptcha v3 keys
google:
  recaptcha:
    key:
      site: ${GOOGLE_RECAPTCHA_KEY_SITE}
      secret: ${GOOGLE_RECAPTCHA_SECRET_KEY}
      threshold: 0.5
  
################### JavaMail Configuration ##########################
support:
  email:
    ${MAIL_USERNAME}@gmail.com


med-voll:
  app-seguranca-service: ${SEGURANCA_URL}
  jwt:
    secret: ${JWT_SECRET}